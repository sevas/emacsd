.. role:: code(strong)
.. role:: file(emphasis)

======================
README file for Pymacs
======================

.. raw:: html

   <!--: Faire
       import socket
       if socket.gethostname() == 'phenix':
           bpi = ':8080'
       else:
           bpi = '.progiciels-bpi.ca'
   :-->
   <!-- Traiter! -->

..

Pymacs is a powerful tool which, once started from Emacs, allows
both-way communication between Emacs Lisp and Python.  Pymacs aims
Python as an extension language for Emacs rather than the other way
around, and this asymmetry is reflected in some design choices.  Within
Emacs Lisp code, one may load and use Python modules.  Python functions
may themselves use Emacs services, and handle Emacs Lisp objects kept in
Emacs Lisp space.

The Pymacs manual (either the `HTML one`__ or the `PDF one`__) has
installation instructions, a full description of the API, pointers
to documented examples, to resources, and to other Pymacs sites or
projects.

__ http://pymacs%(bpi)s/pymacs.html
__ http://pymacs%(bpi)s/pymacs.pdf

The official distribution (read the `release notice`__) is available at:

  + http://pymacs%(bpi)s/archives/Pymacs.tar.gz

__ http://pymacs%(bpi)s/courriel/latest/1

Some older distributions, and maybe beta pre-releases for testers,
*might* be available in this directory:

  + http://pymacs%(bpi)s/archives/

There is a reachable copy of my own sandbox repository for Pymacs.  I
experiment with it, and branches may be reset at any time.  The server
might not even be up (then just tell me!).  To get your own copy, try::

  git clone git://pymacs%(bpi)s/pymacs

Please report problems, comments and suggestions to `Fran√ßois Pinard`__
at ``pinard@iro.umontreal.ca``.

__ mailto:pinard@iro.umontreal.ca
